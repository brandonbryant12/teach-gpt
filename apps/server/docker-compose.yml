version: '3.8'

services:
  db:
    image: postgres:15 # Use a specific version
    container_name: teach-gpt-db
    restart: always
    ports:
      - "5432:5432" # Expose port 5432 for local connections if needed
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: . # Build from the current directory (apps/server)
      dockerfile: Dockerfile
    container_name: teach-gpt-api
    restart: always
    depends_on:
      db:
        condition: service_healthy # Wait for db to be healthy
    ports:
      - "3000:3000" # Expose NestJS default port
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/mydatabase
      # Read JWT vars from the host environment (which should load from .env)
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION_TIME: ${JWT_EXPIRATION_TIME}
    volumes:
      - /usr/src/app/node_modules # Avoid overriding node_modules in container
    # Add env_file to explicitly load .env (optional but good practice)
    env_file:
      - .env
    # Command to run migrations then start the app
    command: sh -c "npm run db:migrate && npm run start:prod"

volumes:
  postgres_data: # Persist database data 